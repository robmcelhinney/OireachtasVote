{"version":3,"sources":["icons/user.svg","Components/Table.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Table","props","useState","percent","setPercent","info","vote","setVote","widthHide","setWidthHide","partyWidth","setPartyWidth","party_options","useEffect","resize","smallerWidth","window","innerWidth","smallTable","standardTable","addEventListener","removeEventListener","pictureColumn","id","accessor","d","href","member_id","alt","className","src","onError","event","target","require","filterable","maxWidth","voteColumn","Header","filterMethod","filter","row","pivotId","Number","Filter","onChange","range","min","max","start","connect","step","value","style","width","marginLeft","handleVoteRange","tooltips","wNumb","decimals","getNewTDTooltip","total_votes","firstName","secondName","Tooltip","title","enterDelay","leaveDelay","placement","fullNameColumn","lastName","firstNameColumn","lastNameColumn","percentColumnSlider","percentVotes","handlePercentRange","pips","mode","values","percentColumnOptions","isNaN","e","onBlur","columns","length","parties","forEach","element","push","label","includes","String","defaultValue","isMulti","name","options","classNamePrefix","menuPortalTarget","document","body","unshift","data","members","defaultSortDesc","defaultSorted","desc","defaultFilterMethod","filterLowerCaseNormalize","str","undefined","toLowerCase","normalize","replace","rowValue","child","children","filterCaseInsensitive","defaultPageSize","pageSizeOptions","App","handleCheckedCabinet","type","state","setState","excludeCabinet","cabinetSelection","handleAlterMembers","excludeZeroVotes","zeroSelection","handleAlterZeroVotes","newSelection","selection_members","result","member","currentDail","dateCreated","FormGroup","FormControlLabel","control","Checkbox","checked","this","color","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.641adfc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.9bf531f6.svg\";","import React, {useEffect, useState} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport info from '../info.json';\r\nimport Select from 'react-select';\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport wNumb from 'wnumb';\r\nimport InputNumber from 'rc-input-number';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction filterCaseInsensitive(filter, row) {\r\n\tconst id = filter.pivotId || filter.id;\r\n\r\n\tfunction filterLowerCaseNormalize(str) {\r\n\t\treturn (\r\n\t\t\tstr !== undefined ?\r\n\t\t\t\tString(str.toLowerCase()).includes(filter.value.toLowerCase())\r\n\t\t\t\t|| (String(str.toLowerCase()).normalize('NFD')\r\n\t\t\t\t\t.replace(/[\\u0300-\\u036f]/g, \"\"))\r\n\t\t\t\t\t.includes(filter.value.toLowerCase())\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n\r\n\tif ([\"party\", \"lastName\"].includes(id)) {\r\n\t\treturn filterLowerCaseNormalize(row[id]);\r\n\t}\r\n\telse if ([\"firstName\", \"fullName\"].includes(id)) {\r\n\t\tlet rowValue = row[id];\r\n\t\tif (typeof(rowValue) === \"object\") {\r\n\t\t\tlet child = row[id].props.children.props.children;\r\n\t\t\trowValue = child[0] + \" \" + child[2];\r\n\t\t}\r\n\t\treturn filterLowerCaseNormalize(rowValue);\r\n\t}\r\n\telse if ([\"votes\", \"percent\"].includes(id)) {\r\n\t\treturn (\r\n\t\t\trow[id] !== undefined ?\r\n\t\t\t\tString(row[id]).includes(filter.value)\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Table = (props) => {\r\n\tconst [percent, setPercent] = useState(\r\n\t\t[0, 100]\r\n\t);\r\n\tconst [vote, setVote] = useState(\r\n\t\t[0, info['totalVotes']]\r\n\t);\r\n\tconst [widthHide, setWidthHide] = useState(\r\n\t\tfalse\r\n\t);\r\n\tconst [partyWidth, setPartyWidth] = useState(\r\n\t\t\"250\"\r\n\t);\r\n\r\n\tconst handlePercentRange = (event, onChange) => {\r\n\t\tsetPercent([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t};\r\n\r\n\tconst handleVoteRange = (event, onChange) => {\r\n\t\tsetVote([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t};\r\n\r\n\tconst party_options = info['parties'];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tlet smallerWidth = (window.innerWidth <= 768);\r\n\t\t\tif (smallerWidth !== widthHide) {\r\n\t\t\t\tsetWidthHide(smallerWidth);\r\n\t\t\t}\r\n\t\t\tif (widthHide) {\r\n\t\t\t\tsmallTable();\r\n\t\t\t\tsetPartyWidth(\"100\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstandardTable();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", resize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n\t});\r\n\r\n\tconst fallbackDefaultImage = (ev) => {\r\n\t\tev.target.src = require('../icons/user.svg')\r\n\t};\r\n\r\n\tconst pictureColumn = {\r\n\t\tid: \"picture\",\r\n\t\taccessor: d => {\r\n\t\t\treturn <div><a href={\"https://www.oireachtas.ie/en/members/member/\"\r\n\t\t\t+ d.member_id}>\r\n\t\t\t\t<img alt={\"td\"}\r\n\t\t\t\t\t\tclassName={\"member__avatar\"}\r\n\t\t\t\t\t\tsrc={\"https://data.oireachtas.ie/ie/oireachtas/member/id/\"\r\n\t\t\t\t\t\t+ d.member_id + \"/image/thumb\"}\r\n\t\t\t\t\t\tonError={event => fallbackDefaultImage(event)}\r\n\t\t\t/></a></div>\r\n\t\t},\r\n\t\tfilterable: false,\r\n\t\tmaxWidth: \"100\",\r\n\t};\r\n\tconst voteColumn = {\r\n\t\tid: \"Votes\",\r\n\t\tHeader: \"Votes\",\r\n\t\taccessor: \"votes\",\r\n\t\tmaxWidth: \"150\",\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\treturn (vote[0] <= Number(row[id])\r\n\t\t\t\t&& vote[1] >= Number(row[id]))\r\n\t\t},\r\n\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div className={\"nouislider_div\"} >\r\n\t\t\t\t<Nouislider\r\n\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\trange={{ min: 0, max: info['totalVotes'] }}\r\n\t\t\t\t\tstart={vote}\r\n\t\t\t\t\tconnect={true}\r\n\t\t\t\t\tstep={10}\r\n\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\tstyle={{width:'70%', marginLeft:'15%'}}\r\n\r\n\t\t\t\t\tonChange={event => handleVoteRange(event, onChange)}\r\n\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t/></div>,\r\n\t};\r\n\r\n\tconst getNewTDTooltip = (total_votes, firstName, secondName=\"\") => {\r\n\t\treturn <Tooltip\r\n\t\t\ttitle={\"New TD. Available for \" + total_votes\r\n\t\t\t+ \" votes.\"} enterDelay={300}\r\n\t\t\tleaveDelay={100} placement={\"top\"}\r\n\t\t>\r\n\t\t\t<span>\r\n\t\t\t\t{firstName}* {secondName}\r\n\t\t\t</span>\r\n\t\t</Tooltip>;\r\n\t};\r\n\r\n\tconst fullNameColumn = {\r\n\t\tHeader: \"Full Name\",\r\n\t\tid: \"fullName\",\r\n\t\taccessor: d => {\r\n\t\t\tif (d.total_votes === null) {\r\n\t\t\t\treturn d.firstName + \" \" + d.lastName\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tgetNewTDTooltip(d.total_votes, d.firstName, d.lastName)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst firstNameColumn = {\r\n\t\tHeader: \"First Name\",\r\n\t\tid: \"firstName\",\r\n\t\taccessor: d => {\r\n\t\t\tif (d.total_votes === null) {\r\n\t\t\t\treturn d.firstName\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tgetNewTDTooltip(d.total_votes, d.firstName)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst lastNameColumn = {\r\n\t\tHeader: \"Last Name\",\r\n\t\taccessor: \"lastName\",\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst percentColumnSlider = {\r\n\t\tHeader: \"Percent\",\r\n\t\tid: \"Percent\",\r\n\t\taccessor: d => {\r\n\t\t\treturn d.percentVotes\r\n\t\t},\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.id;\r\n\t\t\treturn (percent[0] <= Number(row[id])\r\n\t\t\t\t&& percent[1] >= Number(row[id]))\r\n\t\t},\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div className={\"nouislider_div\"}>\r\n\t\t\t\t<Nouislider\r\n\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\trange={{ min: 0, max: 100 }}\r\n\t\t\t\t\tstart={percent}\r\n\t\t\t\t\tconnect={true}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tvalue={filter ? filter.value : ''}\r\n\t\t\t\t\tonChange={event => handlePercentRange(event, onChange)}\r\n\t\t\t\t\tpips={{\r\n\t\t\t\t\t\tmode: \"count\",\r\n\t\t\t\t\t\tvalues: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t/>\r\n\t\t\t</div>,\r\n\t};\r\n\r\n\tconst percentColumnOptions = {\r\n\t\tHeader: \"Percent\",\r\n\t\tid: \"Percent\",\r\n\t\taccessor: d => {\r\n\t\t\treturn d.percentVotes\r\n\t\t},\r\n\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.id;\r\n\t\t\tif (filter.value[1] === \"one\") {\r\n\t\t\t\tconst value = (isNaN(filter.value[0])) ? 0 : filter.value[0];\r\n\t\t\t\treturn value <= Number(row[id])\r\n\t\t\t\t\t&& percent[1] >= Number(row[id])\r\n\t\t\t}\r\n\t\t\tconst value = (isNaN(filter.value[0])) ? 100 : filter.value[0];\r\n\t\t\treturn percent[0] <= Number(row[id])\r\n\t\t\t\t&& value >= Number(row[id])\r\n\t\t},\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div>\r\n\t\t\t\t<InputNumber className={\"numberInput\"}\r\n\t\t\t\t\t\t\t // placeholder={percent[0]}\r\n\t\t\t\t\t\t\t value={percent[0]}\r\n\t\t\t\t\t\t\t min={0} max={100}\r\n\t\t\t\t\t\t\t onChange={e => {\r\n\t\t\t\t\t\t\t \tonChange([(isNaN(e)) ? 0 : e, \"one\"])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t onBlur={event => {\r\n\t\t\t\t\t\t\t\t let value = Number(event.target.value);\r\n\t\t\t\t\t\t\t\t if (isNaN(value)) {\r\n\t\t\t\t\t\t\t\t \tvalue = 0;\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t setPercent([value, percent[1]])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputNumber className={\"numberInput\"}\r\n\t\t\t\t\t\t\t // placeholder={percent[1]}\r\n\t\t\t\t\t\t\t value={percent[1]}\r\n\t\t\t\t\t\t\t min={0} max={100}\r\n\t\t\t\t\t\t\t onChange={e => {\r\n\t\t\t\t\t\t\t\t onChange([(isNaN(e)) ? 100 : e, \"two\"]);\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t onBlur={event => {\r\n\t\t\t\t\t\t\t\t let value = Number(event.target.value);\r\n\t\t\t\t\t\t\t\t if (isNaN(value)) {\r\n\t\t\t\t\t\t\t\t\t value = 100;\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t setPercent([percent[0], value])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t};\r\n\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tHeader: \"Party\",\r\n\t\t\taccessor: \"party\",\r\n\t\t\tmaxWidth: partyWidth,\r\n\t\t\tfilterMethod: (filter, row) => {\r\n\t\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\t\tif (filter['value'] && filter['value'].length !== 0) {\r\n\t\t\t\t\tlet parties = [];\r\n\t\t\t\t\tfilter['value'].forEach(\r\n\t\t\t\t\t\telement =>\r\n\t\t\t\t\t\t\tparties.push(element.label)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn (parties.includes(String(row[id])))\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tFilter: ({ filter, onChange }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tdefaultValue={[]}\r\n\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\tname=\"colors\"\r\n\t\t\t\t\t\toptions={party_options}\r\n\t\t\t\t\t\tclassName=\"basic-multi-select\"\r\n\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\tmenuPortalTarget={document.body}\r\n\t\t\t\t\t\tonChange={event => onChange(event)}\r\n\t\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t];\r\n\r\n\tconst smallTable = () => {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfullNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t\tcolumns.push(percentColumnOptions);\r\n\t};\r\n\tconst standardTable = () => {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfirstNameColumn,\r\n\t\t\t\tlastNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t\tcolumns.unshift(pictureColumn);\r\n\t\tcolumns.push(percentColumnSlider);\r\n\t\tcolumns.push(voteColumn);\r\n\t};\r\n\r\n\tif (window.innerWidth <= 768) {\r\n\t\tsmallTable()\r\n\t}\r\n\telse {\r\n\t\tstandardTable()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ReactTable\r\n\t\t\tdata={props.members}\r\n\t\t\tcolumns={columns}\r\n\t\t\tfilterable\r\n\t\t\tclassName=\"-striped -highlight\"\r\n\t\t\tdefaultSortDesc={true}\r\n\t\t\tdefaultSorted={[{\r\n\t\t\t\tid: 'Percent',\r\n\t\t\t\tdesc: false\r\n\t\t\t}]}\r\n\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row)}\r\n\t\t\tdefaultPageSize={15}\r\n\t\t\tpageSizeOptions={[5, 10, 15, 20, 50, 100, props.members.length]}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport 'react-table/react-table.css';\r\nimport info from '../info.json';\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Table from './Table';\r\nimport members from '../members.json';\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\texcludeCabinet: false,\r\n\t\t\texcludeZeroVotes: false,\r\n\t\t\t// excludeTaoiseach: false,\r\n\t\t\tdata: members,\r\n\t\t};\r\n\t}\r\n\r\n\thandleCheckedCabinet = (type) => {\r\n\t\tlet data = this.state.data;\r\n\t\tif (type === \"cabinet\"){\r\n\t\t\tthis.setState({excludeCabinet: !this.state.excludeCabinet});\r\n\t\t\tconst cabinetSelection = !this.state.excludeCabinet;\r\n\t\t\tdata = this.handleAlterMembers(cabinetSelection);\r\n\t\t\tif (this.state.excludeZeroVotes) {\r\n\t\t\t\tdata = this.excludeZeroVotes(data);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({excludeZeroVotes: !this.state.excludeZeroVotes});\r\n\t\t\tconst zeroSelection = !this.state.excludeZeroVotes;\r\n\t\t\tdata = this.handleAlterZeroVotes(zeroSelection, data);\r\n\t\t\tif (this.state.excludeCabinet) {\r\n\t\t\t\tdata = this.excludeCabinet(data);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({data: data});\r\n\t};\r\n\r\n\thandleAlterMembers = (newSelection) => {\r\n\t\tif (newSelection) {\r\n\t\t\treturn this.excludeCabinet(members);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (this.state.data !== members) ? members : this.state.data;\r\n\t\t}\r\n\t};\r\n\r\n\thandleAlterZeroVotes = (zeroSelection) => {\r\n\t\tif (zeroSelection) {\r\n\t\t\treturn this.excludeZeroVotes(this.state.data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn members;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\texcludeCabinet(selection_members) {\r\n\t\tlet result = [];\r\n\t\tselection_members.forEach(\r\n\t\t\tmember => {\r\n\t\t\t\tif (!member[\"office\"]) {\r\n\t\t\t\t\tresult.push(member)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n\texcludeZeroVotes(selection_members) {\r\n\t\tlet result = [];\r\n\t\tselection_members.forEach(\r\n\t\t\tmember => {\r\n\t\t\t\tif (member[\"votes\"] !== 0) {\r\n\t\t\t\t\tresult.push(member)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div id={\"maincontent\"} className={\"container\"}>\r\n\t\t\t\t<div id={\"headerInfo\"}>\r\n\t\t\t\t\t<h1 className={\"mainHeader\"}>TD Voting Record - {info.currentDail}</h1>\r\n\t\t\t\t\t<p><span className={\"should_be\"}>**should be**</span> Accurate as of {info.dateCreated}</p>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.excludeCabinet}\r\n\t\t\t\t\t\t\t\t\t\t  value={this.state.excludeCabinet}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={() =>\r\n\t\t\t\t\t\t\t\t\t\t  this.handleCheckedCabinet(\"cabinet\")\r\n\t\t\t\t\t\t\t\t\t\t  } />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Exclude Cabinet Members\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.excludeZeroVotes}\r\n\t\t\t\t\t\t\t\t\t\t  value={this.state.excludeZeroVotes}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t  this.handleCheckedCabinet(\"zero\")\r\n\t\t\t\t\t\t\t\t\t\t  } />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Exclude TDs without votes\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/*<FormControlLabel*/}\r\n\t\t\t\t\t\t\t{/*control={*/}\r\n\t\t\t\t\t\t\t\t{/*<Checkbox checked={this.state.excludeTaoiseach}*/}\r\n\t\t\t\t\t\t\t\t\t\t  {/*onChange={() =>*/}\r\n\t\t\t\t\t\t\t\t\t\t\t  {/*this.handleChecked(\"taoiseach\")}*/}\r\n\t\t\t\t\t\t\t\t\t\t  {/*value={this.state.excludeTaoiseach} />*/}\r\n\t\t\t\t\t\t\t{/*}*/}\r\n\t\t\t\t\t\t\t{/*label=\"Exclude Taoiseach\"*/}\r\n\t\t\t\t\t\t{/*/>*/}\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Table members={this.state.data}/>\r\n\t\t\t\t<p>Plan to run the web scraper around once a week to keep the\r\n\t\t\t\t\tinfo relevant. Let me know if it hasn't been done in a while.</p>\r\n\t\t\t\t<p>Duplicates are from the Oireachtas API, they should\r\n\t\t\t\t\tautomatically be removed when their end is fixed.</p>\r\n\t\t\t\t<p>If you have any ideas please let me know on\r\n\t\t\t\t\tTwitter/Github below, i.e. should I keep TDs no longer\r\n\t\t\t\t\tin the Dáil (Current MEPs), how should I deal with new TDs\r\n\t\t\t\t\twho joined during Dáil session, & should I automatically\r\n\t\t\t\t\tremove the Ceann-Comhairle? <span className={\"should_be\"}>\r\n\t\t\t\t\tblame <a href=\"https://data.oireachtas.ie/\">data.oireachtas.ie</a></span></p>\r\n\t\t\t</div>\r\n\t\t\t<div id={\"footer\"}\r\n\t\t\t\tstyle={{color: 'black'}}>\r\n\t\t\t\tAny queries/requests, contact me @<a\r\n\t\t\t\thref={\"https://twitter.com/RMcElhinney\"}>Rob McElhinney\r\n\t\t\t\t</a> | Code Viewable @<a\r\n\t\t\t\thref={\"https://github.com/robmcelhinney/OireachtasVote\"}>github</a>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}