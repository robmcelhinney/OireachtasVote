{"version":3,"sources":["icons/user.svg","Components/Table.js","Components/PartyValue.js","Components/PartyValueList.js","Components/Info.js","Components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Table","props","useState","percent","setPercent","info","vote","setVote","widthHide","setWidthHide","partyWidth","setPartyWidth","party_options","useEffect","resize","smallerWidth","window","innerWidth","smallTable","standardTable","addEventListener","removeEventListener","pictureColumn","id","accessor","d","href","member_id","alt","className","src","onError","event","target","require","filterable","maxWidth","voteColumn","Header","filterMethod","filter","row","pivotId","Number","Filter","onChange","range","min","max","start","connect","step","value","style","width","marginLeft","handleVoteRange","tooltips","wNumb","decimals","getNewTDTooltip","total_votes","firstName","secondName","Tooltip","title","enterDelay","leaveDelay","placement","fullNameColumn","lastName","firstNameColumn","lastNameColumn","percentColumnSlider","percentVotes","handlePercentRange","pips","mode","values","percentColumnOptions","isNaN","e","onBlur","columns","length","parties","forEach","element","push","label","includes","String","defaultValue","isMulti","name","options","classNamePrefix","menuPortalTarget","document","body","unshift","data","members","defaultSortDesc","defaultSorted","desc","defaultFilterMethod","filterLowerCaseNormalize","str","undefined","toLowerCase","normalize","replace","rowValue","child","children","filterCaseInsensitive","defaultPageSize","pageSizeOptions","PartyValue","partyName","median","PartyValueList","dict","Object","keys","map","key","useStyles","makeStyles","card","minWidth","marginTop","color","cardTop","backgroundColor","boxShadow","cardHeader","font","Info","medians","setMedians","averages","setAverages","partyMedian","partyAverages","classes","console","log","Card","CardContent","Typography","variant","component","App","handleCheckedCabinet","type","state","setState","excludeCabinet","cabinetSelection","handleAlterMembers","excludeZeroVotes","zeroSelection","handleAlterZeroVotes","newSelection","this","members_json","selection_members","result","member","currentDail","dateCreated","FormGroup","FormControlLabel","control","Checkbox","checked","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd12c8aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.9bf531f6.svg\";","import React, {useEffect, useState} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport info from '../info.json';\r\nimport Select from 'react-select';\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport wNumb from 'wnumb';\r\nimport InputNumber from 'rc-input-number';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction filterCaseInsensitive(filter, row) {\r\n\tconst id = filter.pivotId || filter.id;\r\n\r\n\tfunction filterLowerCaseNormalize(str) {\r\n\t\treturn (\r\n\t\t\tstr !== undefined ?\r\n\t\t\t\tString(str.toLowerCase()).includes(filter.value.toLowerCase())\r\n\t\t\t\t|| (String(str.toLowerCase()).normalize('NFD')\r\n\t\t\t\t\t.replace(/[\\u0300-\\u036f]/g, \"\"))\r\n\t\t\t\t\t.includes(filter.value.toLowerCase())\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n\r\n\tif ([\"party\", \"lastName\"].includes(id)) {\r\n\t\treturn filterLowerCaseNormalize(row[id]);\r\n\t}\r\n\telse if ([\"firstName\", \"fullName\"].includes(id)) {\r\n\t\tlet rowValue = row[id];\r\n\t\tif (typeof(rowValue) === \"object\") {\r\n\t\t\tlet child = row[id].props.children.props.children;\r\n\t\t\trowValue = child[0] + \" \" + child[2];\r\n\t\t}\r\n\t\treturn filterLowerCaseNormalize(rowValue);\r\n\t}\r\n\telse if ([\"votes\", \"percent\"].includes(id)) {\r\n\t\treturn (\r\n\t\t\trow[id] !== undefined ?\r\n\t\t\t\tString(row[id]).includes(filter.value)\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Table = (props) => {\r\n\tconst [percent, setPercent] = useState(\r\n\t\t[0, 100]\r\n\t);\r\n\tconst [vote, setVote] = useState(\r\n\t\t[0, info['totalVotes']]\r\n\t);\r\n\tconst [widthHide, setWidthHide] = useState(\r\n\t\tfalse\r\n\t);\r\n\tconst [partyWidth, setPartyWidth] = useState(\r\n\t\t\"250\"\r\n\t);\r\n\r\n\tconst handlePercentRange = (event, onChange) => {\r\n\t\tsetPercent([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t};\r\n\r\n\tconst handleVoteRange = (event, onChange) => {\r\n\t\tsetVote([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t};\r\n\r\n\tconst party_options = info['parties'];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tlet smallerWidth = (window.innerWidth <= 768);\r\n\t\t\tif (smallerWidth !== widthHide) {\r\n\t\t\t\tsetWidthHide(smallerWidth);\r\n\t\t\t}\r\n\t\t\tif (widthHide) {\r\n\t\t\t\tsmallTable();\r\n\t\t\t\tsetPartyWidth(\"100\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tstandardTable();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", resize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n\t});\r\n\r\n\tconst fallbackDefaultImage = (ev) => {\r\n\t\tev.target.src = require('../icons/user.svg')\r\n\t};\r\n\r\n\tconst pictureColumn = {\r\n\t\tid: \"picture\",\r\n\t\taccessor: d => {\r\n\t\t\treturn <div>\r\n\t\t\t\t<a href={\"https://www.oireachtas.ie/en/members/member/\"\r\n\t\t\t\t\t+ d.member_id}>\r\n\t\t\t\t<img alt={\"td\"}\r\n\t\t\t\t\t\tclassName={\"member__avatar\"}\r\n\t\t\t\t\t\tsrc={\"https://data.oireachtas.ie/ie/oireachtas/member/id/\"\r\n\t\t\t\t\t\t+ d.member_id + \"/image/thumb\"}\r\n\t\t\t\t\t\tonError={event => fallbackDefaultImage(event)}\r\n\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t},\r\n\t\tfilterable: false,\r\n\t\tmaxWidth: 80,\r\n\t};\r\n\tconst voteColumn = {\r\n\t\tid: \"Votes\",\r\n\t\tHeader: \"Votes\",\r\n\t\taccessor: \"votes\",\r\n\t\tmaxWidth: \"150\",\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\treturn (vote[0] <= Number(row[id])\r\n\t\t\t\t&& vote[1] >= Number(row[id]))\r\n\t\t},\r\n\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div className={\"nouislider_div\"} >\r\n\t\t\t\t<Nouislider\r\n\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\trange={{ min: 0, max: info['totalVotes'] }}\r\n\t\t\t\t\tstart={vote}\r\n\t\t\t\t\tconnect={true}\r\n\t\t\t\t\tstep={10}\r\n\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\tstyle={{width:'70%', marginLeft:'15%'}}\r\n\r\n\t\t\t\t\tonChange={event => handleVoteRange(event, onChange)}\r\n\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t/></div>,\r\n\t};\r\n\r\n\tconst getNewTDTooltip = (total_votes, firstName, secondName=\"\") => {\r\n\t\treturn <Tooltip\r\n\t\t\ttitle={\"New TD. Available for \" + total_votes\r\n\t\t\t+ \" votes.\"} enterDelay={300}\r\n\t\t\tleaveDelay={100} placement={\"top\"}\r\n\t\t>\r\n\t\t\t<span>\r\n\t\t\t\t{firstName}* {secondName}\r\n\t\t\t</span>\r\n\t\t</Tooltip>;\r\n\t};\r\n\r\n\tconst fullNameColumn = {\r\n\t\tHeader: \"Full Name\",\r\n\t\tid: \"fullName\",\r\n\t\taccessor: d => {\r\n\t\t\tif (d.total_votes === null) {\r\n\t\t\t\treturn d.firstName + \" \" + d.lastName\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tgetNewTDTooltip(d.total_votes, d.firstName, d.lastName)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst firstNameColumn = {\r\n\t\tHeader: \"First Name\",\r\n\t\tid: \"firstName\",\r\n\t\taccessor: d => {\r\n\t\t\tif (d.total_votes === null) {\r\n\t\t\t\treturn d.firstName\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tgetNewTDTooltip(d.total_votes, d.firstName)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst lastNameColumn = {\r\n\t\tHeader: \"Last Name\",\r\n\t\taccessor: \"lastName\",\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst percentColumnSlider = {\r\n\t\tHeader: \"Percent\",\r\n\t\tid: \"Percent\",\r\n\t\taccessor: d => {\r\n\t\t\treturn d.percentVotes\r\n\t\t},\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.id;\r\n\t\t\treturn (percent[0] <= Number(row[id])\r\n\t\t\t\t&& percent[1] >= Number(row[id]))\r\n\t\t},\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div className={\"nouislider_div\"}>\r\n\t\t\t\t<Nouislider\r\n\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\trange={{ min: 0, max: 100 }}\r\n\t\t\t\t\tstart={percent}\r\n\t\t\t\t\tconnect={true}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tvalue={filter ? filter.value : ''}\r\n\t\t\t\t\tonChange={event => handlePercentRange(event, onChange)}\r\n\t\t\t\t\tpips={{\r\n\t\t\t\t\t\tmode: \"count\",\r\n\t\t\t\t\t\tvalues: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t/>\r\n\t\t\t</div>,\r\n\t};\r\n\r\n\tconst percentColumnOptions = {\r\n\t\tHeader: \"Percent\",\r\n\t\tid: \"Percent\",\r\n\t\taccessor: d => {\r\n\t\t\treturn d.percentVotes\r\n\t\t},\r\n\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.id;\r\n\t\t\tif (filter.value[1] === \"one\") {\r\n\t\t\t\tconst value = (isNaN(filter.value[0])) ? 0 : filter.value[0];\r\n\t\t\t\treturn value <= Number(row[id])\r\n\t\t\t\t\t&& percent[1] >= Number(row[id])\r\n\t\t\t}\r\n\t\t\tconst value = (isNaN(filter.value[0])) ? 100 : filter.value[0];\r\n\t\t\treturn percent[0] <= Number(row[id])\r\n\t\t\t\t&& value >= Number(row[id])\r\n\t\t},\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div>\r\n\t\t\t\t<InputNumber className={\"numberInput\"}\r\n\t\t\t\t\t\t\t // placeholder={percent[0]}\r\n\t\t\t\t\t\t\t value={percent[0]}\r\n\t\t\t\t\t\t\t min={0} max={100}\r\n\t\t\t\t\t\t\t onChange={e => {\r\n\t\t\t\t\t\t\t \tonChange([(isNaN(e)) ? 0 : e, \"one\"])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t onBlur={event => {\r\n\t\t\t\t\t\t\t\t let value = Number(event.target.value);\r\n\t\t\t\t\t\t\t\t if (isNaN(value)) {\r\n\t\t\t\t\t\t\t\t \tvalue = 0;\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t setPercent([value, percent[1]])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t/>\r\n\t\t\t\t<InputNumber className={\"numberInput\"}\r\n\t\t\t\t\t\t\t // placeholder={percent[1]}\r\n\t\t\t\t\t\t\t value={percent[1]}\r\n\t\t\t\t\t\t\t min={0} max={100}\r\n\t\t\t\t\t\t\t onChange={e => {\r\n\t\t\t\t\t\t\t\t onChange([(isNaN(e)) ? 100 : e, \"two\"]);\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\t onBlur={event => {\r\n\t\t\t\t\t\t\t\t let value = Number(event.target.value);\r\n\t\t\t\t\t\t\t\t if (isNaN(value)) {\r\n\t\t\t\t\t\t\t\t\t value = 100;\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t setPercent([percent[0], value])\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t};\r\n\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tHeader: \"Party\",\r\n\t\t\taccessor: \"party\",\r\n\t\t\tmaxWidth: partyWidth,\r\n\t\t\tfilterMethod: (filter, row) => {\r\n\t\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\t\tif (filter['value'] && filter['value'].length !== 0) {\r\n\t\t\t\t\tlet parties = [];\r\n\t\t\t\t\tfilter['value'].forEach(\r\n\t\t\t\t\t\telement =>\r\n\t\t\t\t\t\t\tparties.push(element.label)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn (parties.includes(String(row[id])))\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tFilter: ({ filter, onChange }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tdefaultValue={[]}\r\n\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\tname=\"colors\"\r\n\t\t\t\t\t\toptions={party_options}\r\n\t\t\t\t\t\tclassName=\"basic-multi-select\"\r\n\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\tmenuPortalTarget={document.body}\r\n\t\t\t\t\t\tonChange={event => onChange(event)}\r\n\t\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t];\r\n\r\n\tconst smallTable = () => {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfullNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t\tcolumns.push(percentColumnOptions);\r\n\t};\r\n\tconst standardTable = () => {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfirstNameColumn,\r\n\t\t\t\tlastNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t\tcolumns.unshift(pictureColumn);\r\n\t\tcolumns.push(percentColumnSlider);\r\n\t\tcolumns.push(voteColumn);\r\n\t};\r\n\r\n\tif (window.innerWidth <= 768) {\r\n\t\tsmallTable()\r\n\t}\r\n\telse {\r\n\t\tstandardTable()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ReactTable\r\n\t\t\tdata={props.members}\r\n\t\t\tcolumns={columns}\r\n\t\t\tfilterable\r\n\t\t\tclassName=\"-striped -highlight\"\r\n\t\t\tdefaultSortDesc={true}\r\n\t\t\tdefaultSorted={[{\r\n\t\t\t\tid: 'Percent',\r\n\t\t\t\tdesc: false\r\n\t\t\t}]}\r\n\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row)}\r\n\t\t\tdefaultPageSize={15}\r\n\t\t\tpageSizeOptions={[5, 10, 15, 20, 50, 100, props.members.length]}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst PartyValue = ({partyName, median}) => {\r\n\treturn (\r\n\t\t<span>\r\n\t\t\t<div className={\"median-value\"}>\r\n\t\t\t\t{median}%\r\n\t\t\t</div>\r\n\t\t\t<div className={\"median-name\"}>\r\n\t\t\t\t{partyName}\r\n\t\t\t</div>\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default PartyValue;","import React from 'react';\r\nimport PartyValue from \"./PartyValue\";\r\n\r\nconst PartyValueList = ({ dict }) => {\r\n\treturn (\r\n\t\t<div className={\"flex-container\"}>\r\n\t\t\t{\r\n\t\t\t\tObject.keys(dict).map((key) => (\r\n\t\t\t\t\t<PartyValue key={key} partyName={key}\r\n\t\t\t\t\t\t\t\tmedian={dict[key]} />\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PartyValueList;","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PartyValueList from \"./PartyValueList\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tminWidth: 275,\r\n\t\tmarginTop: 20,\r\n\t\tcolor: '#5d5d5d',\r\n\t},\r\n\tcardTop: {\r\n\t\tbackgroundColor: 'whitesmoke',\r\n\t\tboxShadow: '0 2px 1px -1px rgba(0,0,0,0.06),0 1px 1px 0 rgba(0,0,0,0.04),0 1px 3px 0 rgba(0,0,0,0.04)',\r\n\t},\r\n\tcardHeader: {\r\n\t\tfont: 'normal normal normal 1.5em/1em \\'QuicksandBold\\''\r\n\t}\r\n});\r\n\r\nconst Info = ({info}) => {\r\n\tconst [medians, setMedians] = useState(\r\n\t\t[]\r\n\t);\r\n\tconst [averages, setAverages] = useState(\r\n\t\t[]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (info.partyMedian !== undefined) {\r\n\t\t\tsetMedians(info.partyMedian);\r\n\t\t}\r\n\t\tif (info.partyAverages !== undefined) {\r\n\t\t\tsetAverages(info.partyAverages);\r\n\t\t}\r\n\t}, [info]);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconsole.log(\"medians: \", medians);\r\n\r\n\treturn (\r\n\t\t<Card className={classes.card}>\r\n\t\t\t<CardContent className={classes.cardTop}>\r\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\"\r\n\t\t\t\t\t\t\tclassName={classes.cardHeader}>\r\n\t\t\t\t\tParty Voting Medians*\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<PartyValueList dict={medians}/>\r\n\t\t\t</CardContent>\r\n\r\n\t\t\t<CardContent className={classes.cardTop}>\r\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\"\r\n\t\t\t\t\t\t\tclassName={classes.cardHeader}>\r\n\t\t\t\t\tParty Voting Averages*\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<PartyValueList dict={averages}/>\r\n\t\t\t\t<p id={\"averages-exemption\"}>*Party Averages & Medians exclude any members without votes.</p>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport 'react-table/react-table.css';\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Table from './Table';\r\nimport info from '../info.json';\r\nimport members_json from '../members.json';\r\nimport Info from \"./Info\";\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\texcludeCabinet: false,\r\n\t\t\texcludeZeroVotes: false,\r\n\t\t\tmembers: [],\r\n\t\t\tdata: [],\r\n\t\t\tinfo: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\tthis.setState({\r\n\t\tinfo: info,\r\n\t\tdata: members_json,\r\n\t\tmembers: members_json\r\n\t});\r\n\t}\r\n\r\n\thandleCheckedCabinet = (type) => {\r\n\t\tlet data = this.state.data;\r\n\t\tif (type === \"cabinet\"){\r\n\t\t\tthis.setState({excludeCabinet: !this.state.excludeCabinet});\r\n\t\t\tconst cabinetSelection = !this.state.excludeCabinet;\r\n\t\t\tdata = this.handleAlterMembers(cabinetSelection);\r\n\t\t\tif (this.state.excludeZeroVotes) {\r\n\t\t\t\tdata = this.excludeZeroVotes(data);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({excludeZeroVotes: !this.state.excludeZeroVotes});\r\n\t\t\tconst zeroSelection = !this.state.excludeZeroVotes;\r\n\t\t\tdata = this.handleAlterZeroVotes(zeroSelection, data);\r\n\t\t\tif (this.state.excludeCabinet) {\r\n\t\t\t\tdata = this.excludeCabinet(data);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({data: data});\r\n\t};\r\n\r\n\thandleAlterMembers = (newSelection) => {\r\n\t\tconst { members } = this.state;\r\n\t\tif (newSelection) {\r\n\t\t\treturn this.excludeCabinet(members);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (this.state.data !== members) ? members : this.state.data;\r\n\t\t}\r\n\t};\r\n\r\n\thandleAlterZeroVotes = (zeroSelection) => {\r\n\t\tconst { members } = this.state;\r\n\t\tif (zeroSelection) {\r\n\t\t\treturn this.excludeZeroVotes(this.state.data);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn members;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\texcludeCabinet(selection_members) {\r\n\t\tlet result = [];\r\n\t\tselection_members.forEach(\r\n\t\t\tmember => {\r\n\t\t\t\tif (!member[\"office\"]) {\r\n\t\t\t\t\tresult.push(member)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n\texcludeZeroVotes(selection_members) {\r\n\t\tlet result = [];\r\n\t\tselection_members.forEach(\r\n\t\t\tmember => {\r\n\t\t\t\tif (member[\"votes\"] !== 0) {\r\n\t\t\t\t\tresult.push(member)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn result;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { data, info } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div id={\"maincontent\"} className={\"container\"}>\r\n\t\t\t\t<div id={\"headerInfo\"}>\r\n\t\t\t\t\t<h1 className={\"mainHeader\"}>TD Voting Record - {info.currentDail}</h1>\r\n\t\t\t\t\t<p><span className={\"should_be\"}>*should be*</span> Accurate as of {info.dateCreated}</p>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.excludeCabinet}\r\n\t\t\t\t\t\t\t\t\t\t  value={this.state.excludeCabinet}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={() =>\r\n\t\t\t\t\t\t\t\t\t\t  this.handleCheckedCabinet(\"cabinet\")\r\n\t\t\t\t\t\t\t\t\t\t  } />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Exclude Cabinet Members\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.excludeZeroVotes}\r\n\t\t\t\t\t\t\t\t\t\t  value={this.state.excludeZeroVotes}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t  this.handleCheckedCabinet(\"zero\")\r\n\t\t\t\t\t\t\t\t\t\t  } />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Exclude TDs without votes\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Table members={data}/>\r\n\t\t\t\t<Info info={info}/>\r\n\t\t\t\t<p>Plan to run the web scraper around once a week to keep the\r\n\t\t\t\t\tinfo relevant. Let me know if it hasn't been done in a while.</p>\r\n\t\t\t\t<p>Duplicates are from the Oireachtas API, they should\r\n\t\t\t\t\tautomatically be removed when their end is fixed.</p>\r\n\t\t\t\t<p>If you have any ideas please let me know on\r\n\t\t\t\t\tTwitter/Github below, i.e. should I keep TDs no longer\r\n\t\t\t\t\tin the Dáil (Current MEPs), how should I deal with new TDs\r\n\t\t\t\t\twho joined during Dáil session, & should I automatically\r\n\t\t\t\t\tremove the Ceann-Comhairle? <span className={\"should_be\"}>\r\n\t\t\t\t\tblame <a href=\"https://data.oireachtas.ie/\">data.oireachtas.ie</a></span></p>\r\n\t\t\t</div>\r\n\t\t\t<div id={\"footer\"}\r\n\t\t\t\tstyle={{color: 'black'}}>\r\n\t\t\t\tAny queries/requests, contact me @<a\r\n\t\t\t\thref={\"https://twitter.com/RMcElhinney\"}>Rob McElhinney\r\n\t\t\t\t</a> | Code Viewable @<a\r\n\t\t\t\thref={\"https://github.com/robmcelhinney/OireachtasVote\"}>github</a>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/style.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}