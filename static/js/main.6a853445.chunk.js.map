{"version":3,"sources":["Components/Table.js","Components/App.js","serviceWorker.js","index.js"],"names":["Table","props","useState","percent","setPercent","info","vote","setVote","widthHide","setWidthHide","partyWidth","setPartyWidth","party_options","useEffect","resize","smallerWidth","window","innerWidth","addEventListener","removeEventListener","pictureColumn","id","accessor","d","href","member_id","alt","className","src","filterable","maxWidth","voteColumn","Header","filterMethod","filter","row","pivotId","Number","Filter","onChange","range","min","max","start","connect","step","value","style","width","marginLeft","event","handleVoteRange","tooltips","wNumb","decimals","columns","length","parties","forEach","element","push","label","includes","String","defaultValue","isMulti","name","options","classNamePrefix","menuPortalTarget","document","body","percentVotes","handlePercentRange","pips","mode","values","unshift","firstName","lastName","data","members","defaultSortDesc","defaultSorted","desc","defaultFilterMethod","undefined","toLowerCase","normalize","replace","filterCaseInsensitive","defaultPageSize","pageSizeOptions","App","handleChecked","setState","excludeCabinet","state","newSelection","handleAlterMembers","member","excludeTaoiseach","currentDail","dateCreated","FormGroup","FormControlLabel","control","Checkbox","checked","this","color","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a853445.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport info from '../info.json';\r\nimport Select from 'react-select';\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport wNumb from 'wnumb';\r\n\r\nfunction filterCaseInsensitive(filter, row) {\r\n\tconst id = filter.pivotId || filter.id;\r\n\tif ([\"party\", \"firstName\", \"lastName\", \"fullName\"].includes(id)) {\r\n\t\treturn (\r\n\t\t\trow[id] !== undefined ?\r\n\t\t\t\tString(row[id].toLowerCase()).includes(filter.value.toLowerCase())\r\n\t\t\t\t\t\t|| (String(row[id].toLowerCase()).normalize('NFD')\r\n\t\t\t\t\t\t.replace(/[\\u0300-\\u036f]/g, \"\"))\r\n\t\t\t\t\t\t.includes(filter.value.toLowerCase())\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n\telse if ([\"votes\", \"percent\"].includes(id)) {\r\n\t\treturn (\r\n\t\t\trow[id] !== undefined ?\r\n\t\t\t\tString(row[id]).includes(filter.value)\r\n\t\t\t\t: true\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Table = (props) => {\r\n\tconst [percent, setPercent] = useState(\r\n\t\t[0, 100]\r\n\t);\r\n\tconst [vote, setVote] = useState(\r\n\t\t[0, info['totalVotes']]\r\n\t);\r\n\tconst [widthHide, setWidthHide] = useState(\r\n\t\tfalse\r\n\t);\r\n\tconst [partyWidth, setPartyWidth] = useState(\r\n\t\t\"250\"\r\n\t);\r\n\r\n\tfunction handlePercentRange(event, onChange) {\r\n\t\tsetPercent([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t}\r\n\tfunction handleVoteRange(event, onChange) {\r\n\t\tsetVote([event[0], event[1]]);\r\n\t\tonChange(event)\r\n\t}\r\n\r\n\tconst party_options = info['parties'];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tlet smallerWidth = (window.innerWidth <= 768);\r\n\t\t\tif (smallerWidth !== widthHide) {\r\n\t\t\t\tsetWidthHide(smallerWidth);\r\n\t\t\t}\r\n\t\t\tif (widthHide) {\r\n\t\t\t\tsetPartyWidth(\"100\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"resize\", resize);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", resize);\r\n\t\t};\r\n\t});\r\n\r\n\tconst pictureColumn = {\r\n\t\tid: \"picture\",\r\n\t\taccessor: d => {\r\n\t\t\treturn <div><a href={\"https://www.oireachtas.ie/en/members/member/\"\r\n\t\t\t+ d.member_id}><img alt={\"td\"}\r\n\t\t\t\t\t\t\t\tclassName={\"member__avatar\"}\r\n\t\t\t\t\t\t\t\tsrc={\"https://data.oireachtas.ie/ie/oireachtas/member/id/\"\r\n\t\t\t\t\t\t\t\t+ d.member_id + \"/image/thumb\"}/></a></div>\r\n\t\t},\r\n\t\tfilterable: false,\r\n\t\tmaxWidth: \"100\",\r\n\t};\r\n\r\n\tconst voteColumn = {\r\n\t\tid: \"Votes\",\r\n\t\tHeader: \"Votes\",\r\n\t\taccessor: \"votes\",\r\n\t\tmaxWidth: \"150\",\r\n\t\tfilterMethod: (filter, row) => {\r\n\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\treturn (vote[0] <= Number(row[id])\r\n\t\t\t\t&& vote[1] >= Number(row[id]))\r\n\t\t},\r\n\r\n\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t<div className={\"nouislider_div\"} >\r\n\t\t\t\t<Nouislider\r\n\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\trange={{ min: 0, max: info['totalVotes'] }}\r\n\t\t\t\t\tstart={vote}\r\n\t\t\t\t\tconnect={true}\r\n\t\t\t\t\tstep={10}\r\n\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\tstyle={{width:'70%', marginLeft:'15%'}}\r\n\r\n\t\t\t\t\tonChange={event => handleVoteRange(event, onChange)}\r\n\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t/></div>,\r\n\t};\r\n\r\n\tconst fullNameColumn = {\r\n\t\tHeader: \"Full Name\",\r\n\t\tid: \"fullName\",\r\n\t\taccessor: d => {\r\n\t\t\treturn d.firstName + \" \" + d.lastName\r\n\t\t},\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst firstNameColumn = {\r\n\t\tHeader: \"First Name\",\r\n\t\taccessor: \"firstName\",\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst lastNameColumn = {\r\n\t\tHeader: \"Last Name\",\r\n\t\taccessor: \"lastName\",\r\n\t\tmaxWidth: \"150\",\r\n\t};\r\n\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\tHeader: \"Party\",\r\n\t\t\taccessor: \"party\",\r\n\t\t\tmaxWidth: partyWidth,\r\n\t\t\tfilterMethod: (filter, row) => {\r\n\t\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\t\tif (filter['value'] && filter['value'].length !== 0) {\r\n\t\t\t\t\tlet parties = [];\r\n\t\t\t\t\tfilter['value'].forEach(\r\n\t\t\t\t\t\telement =>\r\n\t\t\t\t\t\t\tparties.push(element.label)\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn (parties.includes(String(row[id])))\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\tFilter: ({ filter, onChange }) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tdefaultValue={[]}\r\n\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\tname=\"colors\"\r\n\t\t\t\t\t\toptions={party_options}\r\n\t\t\t\t\t\tclassName=\"basic-multi-select\"\r\n\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\tmenuPortalTarget={document.body}\r\n\t\t\t\t\t\tonChange={event => onChange(event)}\r\n\t\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tHeader: \"Percent\",\r\n\t\t\tid: \"Percent\",\r\n\t\t\taccessor: d => {\r\n\t\t\t\treturn d.percentVotes\r\n\t\t\t},\r\n\t\t\tfilterMethod: (filter, row) => {\r\n\t\t\t\tconst id = filter.pivotId || filter.id;\r\n\t\t\t\treturn (percent[0] <= Number(row[id])\r\n\t\t\t\t\t&& percent[1] >= Number(row[id]))\r\n\t\t\t},\r\n\r\n\t\t\tFilter: ({ filter, onChange }) =>\r\n\t\t\t\t<div className={\"nouislider_div\"}>\r\n\t\t\t\t\t<Nouislider\r\n\t\t\t\t\t\tclassName={\"nouislider\"}\r\n\t\t\t\t\t\trange={{ min: 0, max: 100 }}\r\n\t\t\t\t\t\tstart={percent}\r\n\t\t\t\t\t\tconnect={true}\r\n\t\t\t\t\t\tstep={1}\r\n\t\t\t\t\t\tvalue={filter ? filter.value : 'all'}\r\n\t\t\t\t\t\tstyle={{width:'90%'}}\r\n\t\t\t\t\t\tonChange={event => handlePercentRange(event, onChange)}\r\n\t\t\t\t\t\tpips={{\r\n\t\t\t\t\t\t\tmode: \"count\",\r\n\t\t\t\t\t\t\tvalues: 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttooltips={[ wNumb({ decimals: 0 }), wNumb({ decimals: 0 }) ]}\r\n\t\t\t\t\t/></div>,\r\n\t\t},\r\n\t];\r\n\r\n\tif (window.innerWidth <= 768) {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfullNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tcolumns.unshift({\r\n\t\t\tHeader: \"Name\",\r\n\t\t\tcolumns: [\r\n\t\t\t\tfirstNameColumn,\r\n\t\t\t\tlastNameColumn\r\n\t\t\t]\r\n\t\t});\r\n\t\tcolumns.unshift(pictureColumn);\r\n\t\tcolumns.push(voteColumn);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ReactTable\r\n\t\t\tdata={props.members}\r\n\t\t\tcolumns={columns}\r\n\t\t\tfilterable\r\n\t\t\tclassName=\"-striped -highlight\"\r\n\t\t\tdefaultSortDesc={true}\r\n\t\t\tdefaultSorted={[{\r\n\t\t\t\tid: 'Percent',\r\n\t\t\t\tdesc: false\r\n\t\t\t}]}\r\n\t\t\tdefaultFilterMethod={(filter, row) => filterCaseInsensitive(filter, row)}\r\n\t\t\tdefaultPageSize={15}\r\n\t\t\tpageSizeOptions={[5, 10, 15, 20, 50, 100, props.members.length]}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport 'react-table/react-table.css';\r\nimport info from '../info.json';\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Table from './Table';\r\nimport members from '../members.json';\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\texcludeCabinet: false,\r\n\t\t\texcludeTaoiseach: false,\r\n\t\t\tdata: members,\r\n\t\t};\r\n\t}\r\n\r\n\thandleChecked = () => {\r\n\t\tthis.setState({excludeCabinet: !this.state.excludeCabinet});\r\n\t\tconst newSelection = !this.state.excludeCabinet;\r\n\t\tthis.handleAlterMembers(newSelection);\r\n\t};\r\n\r\n\thandleAlterMembers = (newSelection) => {\r\n\t\tif (newSelection) {\r\n\t\t\tlet data = [];\r\n\t\t\tmembers.forEach(\r\n\t\t\t\tmember => {\r\n\t\t\t\t\tif (!member[\"office\"]) {\r\n\t\t\t\t\t\tdata.push(member)\r\n\t\t\t\t\t}}\r\n\t\t\t);\r\n\t\t\tthis.setState({data: data});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.state.data !== members) {\r\n\t\t\t\tthis.setState({data: members})\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div id={\"maincontent\"} className={\"container\"}>\r\n\t\t\t\t<div id={\"headerInfo\"}>\r\n\t\t\t\t\t<h1 className={\"mainHeader\"}>TD Voting Record - {info.currentDail}</h1>\r\n\t\t\t\t\t<p><span className={\"should_be\"}>**should be**</span> Accurate as of {info.dateCreated}</p>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.excludeCabinet}\r\n\t\t\t\t\t\t\t\t\t\t  onChange={() =>\r\n\t\t\t\t\t\t\t\t\t\t  this.handleChecked()}\r\n\t\t\t\t\t\t\t\t\t\t  value={this.state.excludeCabinet} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabel=\"Exclude Cabinet Members\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/*<FormControlLabel*/}\r\n\t\t\t\t\t\t\t{/*control={*/}\r\n\t\t\t\t\t\t\t\t{/*<Checkbox checked={this.state.excludeTaoiseach}*/}\r\n\t\t\t\t\t\t\t\t\t\t  {/*onChange={() =>*/}\r\n\t\t\t\t\t\t\t\t\t\t\t  {/*this.handleChecked(\"taoiseach\")}*/}\r\n\t\t\t\t\t\t\t\t\t\t  {/*value={this.state.excludeTaoiseach} />*/}\r\n\t\t\t\t\t\t\t{/*}*/}\r\n\t\t\t\t\t\t\t{/*label=\"Exclude Taoiseach\"*/}\r\n\t\t\t\t\t\t{/*/>*/}\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Table members={this.state.data}/>\r\n\t\t\t\t<p>Plan to run the web scraper at least once a week to keep the\r\n\t\t\t\t\tinfo relevant.</p>\r\n\t\t\t\t<p>If you have any ideas please let me know on\r\n\t\t\t\t\tTwitter/Github below, i.e. should I keep TDs no longer\r\n\t\t\t\t\tin the Dáil (Current MEPs) or should I automatically\r\n\t\t\t\t\tremove the Ceann-Comhairle <span className={\"should_be\"}>\r\n\t\t\t\t\tblame https://data.oireachtas.ie/</span></p>\r\n\t\t\t</div>\r\n\t\t\t<div id={\"footer\"}\r\n\t\t\t\tstyle={{color: 'black'}}>\r\n\t\t\t\tAny queries/requests, contact me @<a\r\n\t\t\t\thref={\"https://twitter.com/RMcElhinney\"}>Rob McElhinney\r\n\t\t\t\t</a> | Code Viewable @<a\r\n\t\t\t\thref={\"https://github.com/robmcelhinney/OireachtasVote\"}>github</a>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}